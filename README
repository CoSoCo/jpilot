==============================================================================
Last updated: 11 Mar 2025 by Ulf Zibis <Ulf.Zibis@CoSoCo.de>
==============================================================================

J-Pilot is a palm pilot desktop for Linux/Unix written by:
Judd Montgomery, judd@jpilot.org
It is very useable, but still has many planned updates to make it better.

If you like it feel to send me donations ;)
I collect coins from anywhere, anytime also.
At least send me an email and let me know you are using it.
I'd like to know how many people this is useful to.

Judd Montgomery
P.O. Box 665
Sunbury, OH 43074


==============================================================================
Information about being a translator can be found at:
http://www.iro.umontreal.ca/contrib/po/HTML/
==============================================================================

==============================================================================
Building the project
--------------------

	J-Pilot is developed primarily on Debian GNU/Linux and FreeBSD. It
	is expected to build cleanly on any POSIX-compliant platform. Some
	users have reported success building it under Cygwin on Windows. It
	will also build cleanly under Apple OSX, if you have the proper
	development environment installed and configured on your machine.
	Each of these will be explained in detail below.

Building J-Pilot on Linux/Unix systems
-----------------------------------------

	PLEASE READ THIS CAREFULLY! The worst thing you can do is the
	overly-common misuse of "configure, make, make install" to build and
	install J-Pilot. Please make sure you use './configure --help'
	to make sure you're enabling all of the options you wish to use.

	You will also need to have your development environment set up, which
	will require such tools as automake, autoconf, libtool, some system
	headers, and others to be properly installed and configured on your
	machine first. If you are running a current Linux or Unix system,
	these common tools are probably packaged for you.
	You also need to satisfy the dependencies of these libraries:
		libgtk-3, libusb, libbluetooth, libpisock9, libsqlite3 and
		libgcrypt or oppenssl
	On Debian systems you can therefore execute:
		$ sudo apt install build-essential automake libtool-bin
		$ sudo apt install libgtk-3-dev libpisock-dev libgcrypt20-dev libsqlite3-dev

	If you are using a GIT version of J-Pilot, e.g. from
	https://github.com/juddmon/jpilot/, you will have to run
	'sh autogen.sh' first, from the top-level directory, which will
	create and bootstrap the "configure" script for you.
	On modern systems you may alternatively use 'autoupdate' and 
	'autoreconf -i -s -f' to create the "configure" script.

	If you have downloaded this code from the website, or as a tarball,
	simply unpack the tarball and run './configure' in the top-level
	directory with your specific arguments. './configure --help' will
	describe all of them.

	If you want to install in some place other than the default location of
	/usr/local, pass configure an argument such as:

		$ ./configure --prefix=/home/fred/pilot

	If configure ran successfully, you should run 'make' to build the
	software.

		$ make
	
	After the source builds, feel free to install J-Pilot.

		$ make install

==============================================================================


==============================================================================
Plugins:
 Manana can be found at http://bill.sexton.tripod.com/download.htm
 KeyRing can be found at http://gnukeyring.sourceforge.net

==============================================================================
USB and Palm OS 4.x devices

To use USB devices you must have the appropriate usb modules loaded or
compiled into the kernel.  These are usually either uhci, or ohci, uhci
being the more common.  The visor driver is also needed.

I would recommend a fairly new kernel >= 2.4.17 if you are using a USB palm
other than a visor.

To Sync USB devices other than visors you will need to download pilot-link
0.10.0 or greater.  As of this release you can only get this from the
pilot-link CVS website.  http://www.pilot-link.org.


If you are using Palm OS > 4.0 and see this message:
"The desktop HotSync software does not support the password on this handheld.
You must upgrade your desktop software or remove the password from the
handheld."

You need pilot-link >= 0.13.0

==============================================================================
SERIAL PORT SETUP:

When syncing, jpilot uses the port and speed settings out of the preferences
menu.  If the port is blank then jpilot will use the PILOTPORT environment
variables, as does pilot-link.  If these are blank then jpilot will default
to /dev/pilot.

It is recommended, but not neccessay to make a link from /dev/pilot to the
correct serial port.
So, if your cradle is on COM1, this is /dev/ttyS0 under Linux.  You could
execute the command "ln -s /dev/ttyS0 /dev/pilot".  COM2 is /dev/ttyS1, and
so on.

You must also give non-root users permisions to access the serial port.
The command to do this is (as root) "chmod 666 /dev/ttyS0" for the first
serial port, ttyS1, for the second, and so on.

USB devices usually use /dev/ttyUSB0, or /dev/ttyS1

If you are using the new devfs serial ports will be:
 first  serial port is /dev/tts/0
 second serial port is /dev/tts/1

 first  USB port is /dev/usb/tts/0
 second USB port is /dev/usb/tts/1
==============================================================================

==============================================================================
COLOR FILES:

Make install will copy a few default color files to /usr/local/share/jpilot/
(unless you told configure to use another prefix).
These will be selectable from the preferences menu.  Also jpilot will look
in $JPILOT_HOME/.jpilot/ for colors files.  They must start with "jpilotrc".
If you want to add new ones, or modify the current ones, just put the files
in one of these directories and they will show up in the preferences menu.

If you create your own cool jpilotrc files feel free to send them
back to me and if I like it, I'll include it in the release.

==============================================================================
ENVIRONMENT VARIABLES

J-Pilot uses the JPILOT_HOME environment variable to make it easy to allow
multiple pilots to be synced under the same unix user.  Just set JPILOT_HOME
to the directory you want jpilot to use.  For example, I have 2 palm pilots.
I can sync the one I use all the time into /home/judd.  The other one I can
sync into /home/judd/palm2 by using this script:
#!/bin/bash
JPILOT_HOME=/home/judd/palm2
jpilot

This is also handy for syncing xcopilot into its own directory.

You don't have to set JPILOT_HOME.  If its not set then jpilot will use the
HOME env variable.

Future version of J-Pilot will probably sync multiple palms into a
subdirectory under the JPILOT_HOME/.jpilot directory.

==============================================================================
UBUNTU DIALOUT USER

In ubuntu you must be a member of the dialout group in order to sync over USB.
Users will not be in this group by default. If you are using serial ports see the README file.

sudo usermod -a -G dialout $USER

==============================================================================
SYNCING

Most users find it easiest to sync by pressing the sync button on the PalmOS device
and then within a second or a few pressing the sync button on jpilot.

==============================================================================
OOPS, REVERTING:

You can always make the databases revert back to the last time that the
pilot was synced.  All you have to do is "rm ~/.jpilot/*.pc3".
Deleted records will come back, etc.  Nothing is permanent until the
sync/backup.  You can do this if you make a mistake, or just to play around 
with jpilot and then delete the changed records without syncing them.

Also, from the preferences menu, you can choose to show deleted records
and then click on the deleted record and use "Add" to get a copy of it back.

==============================================================================
BACKUP and SYNC:

The Sync button will sync the 4 applications with the palm pilot and any
plugins that are installed.

The Backup button will backup every program and database from the palm
pilot, except for AvantGo files (these are usually big and change daily).

If you get an error saying that you have a NULL user ID, then you need to
run install-user from the pilot-link suite.
e.g.  "install-user /dev/pilot Judd 1234", of course replace "Judd" and
"1234" with you favorite name and number. 

CLOCK UPDATE and flickers:

I don't know why, but the scrollbars flicker when the clock updates.  On some
systems it is bad, others not at all.  To get rid of this, just go into
preferences and choose a time without seconds.  Then the clock will only
update every minute.
